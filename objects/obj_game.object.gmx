<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>-500</depth>
  <persistent>-1</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>gameover = true;
global.highscore = 0;
global.threadlock = false;
bulletcount = 20;
blobtime = 3000;
onlinescores = -1;
global.blobcolor = c_green;
global.bgcolor = $eaeaea;
global.projcolor = c_white;
txtcolor = $000000;
random_set_seed(current_time);
// unrelated to main game
/*f = 0;
d = 6;
stoggle = false;*/
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="2">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if (!gameover) {
    score = ceil(score + (((bulletcount+1)/20)*instance_number(obj_blobplayer)));
    alarm[2] = 1;
} else {
    if (score &gt; global.highscore)
        global.highscore = score;
    alarm[0] = -1;
    alarm[1] = -1;
    alarm[2] = -1;
    with(instance_create(room_width/2, room_height/1.5, obj_button)) {
        callback = highscore_upload;
        str = "upload";
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="1">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>repeat(10 + irandom(bulletcount)) {
    var xs, ys;
    if (irandom(1)) {
        xs = 0;
        ys = irandom(room_height);
    } else {
        xs = irandom(room_width);
        ys = 0;
    }
    instance_create(xs, ys, obj_projectile);
}
alarm[1] = room_speed;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>var xs, ys;
if (irandom(1)) {
    xs = 0;
    ys = irandom(room_height);
} else {
    xs = irandom(room_width);
    ys = 0;
}
instance_create(xs, ys, obj_blobnpc);
alarm[0] = room_speed * (1 + irandom(1 * (blobtime/(score+1))));
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>// used for gif making with imagemagick
/*if (stoggle &amp;&amp; (!d--)) {
    screen_save("frame"+string(f++)+".png");
    d = 6;
}*/
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="62">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if (ds_map_find_value(async_load, "id") == request) {
    var statuscode = ds_map_find_value(async_load, "http_status");
    if (ds_map_find_value(async_load, "status") == 0) {
        if (statuscode==200) {
            onlinescores = json_decode(ds_map_find_value(async_load, "result"));
        } else {
            onlinescores = -1;
        }
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="4">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>// dumb variables for text animation
anim = 1; /* anim: hey, i'm not dumb &gt;:(            */
dot = 0;  /* dot: you ok?                           */
          /* anim: i'll be fine :)                  */
          /* dot: wanna hangout?                    */
          /* anim: sorry, i don't trust you         */
          /* dot: why not?                          */
          /* anim: 'cause you're false ¯\_(ツ)_/¯    */

if (room == rmTitle) exit;
gameover = false;
score = 0;
background_color = global.bgcolor;
if (room == rmSetup) {
    color_get("Pick blob color", global.blobcolor, blob_set_color);
    with(obj_settingsbox) {
        master = other.id;
        callback = game_set_values;
        c = array((other.bulletcount/40)*255, (other.blobtime/6000)*255);
    }
    with(instance_create(room_width/2, room_height/1.5, obj_button)) {
        callback = start_game;
        str = "GO";
    }
    exit;
}
show_debug_message("game started with settings:");
show_debug_message("bulletcount = " + string(bulletcount));
show_debug_message("blobtime = " + string(blobtime));
with(instance_create(room_width&gt;&gt;1, room_height&gt;&gt;1, obj_blobplayer)) {
    isshield = false;
}
alarm[0] = room_speed;
alarm[1] = room_speed;
alarm[2] = 1;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="64">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if (room == rmTitle) {
    draw_text_crappy(room_width/2 - ((string_length("HELL")*96)&gt;&gt;1), 128, "HELL", 1, 0.2);
    draw_set_font(fntSmall);
    draw_text_center(room_width/2, room_height/1.25,
        "A ludum dare 40 compo game#©2017 Ryuzaki_MrL###Press ENTER or START"
    );
    draw_set_font(fntDefault);
    exit;
}
if (global.threadlock) {
    draw_set_color(c_black);
    draw_set_alpha(0.5);
    draw_rectangle(0,0,room_width,room_height,0);
    draw_set_alpha(1);
    draw_set_color(c_white);
    if (onlinescores != -1) {
        var table = "";
        var jlist = onlinescores[? "default"];
        for (var i = 0; i &lt; ds_list_size(jlist); i++) {
            var tmap = jlist[| i];
            table += "\#" + string(i+1) + ": " + string(tmap[? "name"]) + " - " + string(tmap[? "score"]) + "#";
        }
        draw_text_center(room_width/2, room_height/2, table);
    } else {
        draw_text_center(room_width/2, room_height/2, "Loading scores"+string_repeat('.', dot&gt;&gt;0));
        dot += 0.025;
        if (dot &gt;= 4) dot = 0;
    }
}
draw_set_color(txtcolor);
//draw_text(0,0,string(score)); // psssst. the score is secret ;)
if (gameover) {
    draw_text_crappy(room_width/2 - 128, 80, "GAME OVER", 1/3, 0.25);
    draw_text_center(room_width/2, room_height/2,
        "Your score: " + string(score) + "#" +
        "Highscore: " + string(global.highscore)
    );
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="9" enumb="120">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//stoggle = !stoggle;
screen_save("screen"+string(current_time)+".png");
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="9" enumb="82">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>game_restart();
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="9" enumb="17">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>global.bgcolor ^= $848484;
background_color = global.bgcolor;
txtcolor ^= $ffffff;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="9" enumb="13">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if (global.threadlock) global.threadlock = false;
if (gameover) room_goto(rmSetup);
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
