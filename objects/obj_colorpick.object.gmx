<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>-150</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>c = array(255, 255, 255);
psel = 0;
master = noone;
callback = -1;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="1" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if (script_exists(callback)) {
    var col = make_color_rgb(c[0], c[1], c[2]);
    with(master) script_execute(other.callback, col);
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if (global.threadlock) exit;
if (keyboard_check_pressed(vk_up)||gamepad_button_check_pressed(0,gp_padu)) {
    if (--psel &lt; 0) psel = 2;
} else if (keyboard_check_pressed(vk_down)||gamepad_button_check_pressed(0,gp_padd)) {
    if (++psel &gt; 2) psel = 0;
}

if (mouse_check_button_pressed(mb_left) &amp;&amp; point_in_rectangle(device_mouse_x_to_gui(0),device_mouse_y_to_gui(0),162,160,178,176)) {
    c[0] = irandom(255);
    c[1] = irandom(255);
    c[2] = irandom(255);
}

var fast = keyboard_check(vk_control);
if (mouse_check_button(mb_left)) {
    if (point_in_rectangle(device_mouse_x_to_gui(0),device_mouse_y_to_gui(0),168,95,296,105)) {
        c[0] = min((device_mouse_x_to_gui(0) - 168)&lt;&lt;1, 255);
    } else if (point_in_rectangle(device_mouse_x_to_gui(0),device_mouse_y_to_gui(0),168,115,296,125)) {
        c[1] = min((device_mouse_x_to_gui(0) - 168)&lt;&lt;1, 255);
    } else if (point_in_rectangle(device_mouse_x_to_gui(0),device_mouse_y_to_gui(0),168,135,296,145)) {
        c[2] = min((device_mouse_x_to_gui(0) - 168)&lt;&lt;1, 255);
    }
} else if ((keyboard_check_direct(vk_left)||gamepad_button_check(0,gp_padl)) &amp;&amp; c[psel]&gt;(0+fast)) {
    c[psel] -= 1+fast;
} else if ((keyboard_check_direct(vk_right)||gamepad_button_check(0,gp_padr)) &amp;&amp; c[psel]&lt;(255-fast)) {
    c[psel] += 1+fast;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="64">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>draw_set_color($f0f0f0);
draw_rectangle(96,58,304,182,0);
draw_set_color(c_black);
draw_rectangle(96,58,304,182,1);
draw_set_halign(fa_center);
draw_text(200,66,str);
draw_set_color(cond(psel==0, c_red, c_black));
draw_text(132,90,"Red");
draw_set_color(cond(psel==1, c_red, c_black));
draw_text(132,110,"Green");
draw_set_color(cond(psel==2, c_red, c_black));
draw_text(132,130,"Blue");
draw_line_width_colour(168,100,296,100,10,$000000,$0000ff);
draw_line_width_colour(168,120,296,120,10,$000000,$00ff00);
draw_line_width_colour(168,140,296,140,10,$000000,$ff0000);
draw_set_color($7f7f7f);
draw_rectangle(167+(c[0] &gt;&gt; 1),92,170+(c[0] &gt;&gt; 1),110,0);
draw_rectangle(167+(c[1] &gt;&gt; 1),112,170+(c[1] &gt;&gt; 1),130,0);
draw_rectangle(167+(c[2] &gt;&gt; 1),132,170+(c[2] &gt;&gt; 1),150,0);
var col = make_color_rgb(c[0],c[1],c[2]);
draw_set_color(col);
draw_rectangle(162,160,178,176,0);
draw_set_color(c_black);
draw_rectangle(162,160,178,176,1);
draw_text(210,158,color_to_hex_string(col,false));
draw_set_halign(fa_left);
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
